# .cirrus.yml - Cirrus CI configuration for FreeBSD JRE build

freebsd_jre_build_task:
  name: "Build Static JRE on FreeBSD"
  
  # Use FreeBSD 13.4 as specified
  freebsd_instance:
    image_family: freebsd-13-4
    cpu: 8  # Use more CPUs for faster build
    memory: 16G  # OpenJDK build needs significant memory
  
  # Set timeout - OpenJDK builds can take a long time, but not too long for hanging
  timeout_in: 150m
  
  # Environment variables
  environment:
    OPENJDK_VERSION: "17"  # Building OpenJDK 17 LTS
    CIRRUS_SHELL: /bin/sh
    ASSUME_ALWAYS_YES: yes  # Auto-answer yes to pkg prompts
    FETCH_TIMEOUT: 60      # Timeout for fetch operations
    FETCH_RETRY: 3         # Number of retries
  
  # Cache dependencies to speed up subsequent builds
  pkg_cache:
    folder: /var/cache/pkg
    fingerprint_script: echo $FREEBSD_VERSION
  
  # Install script with better error handling
  install_script: |
    # Set bash options for better error handling
    set -euo pipefail
    
    # Show system info
    echo "=== System Information ==="
    freebsd-version
    uname -a
    df -h
    echo "========================="
    
    # Fix package repository first
    chmod +x pkg-fix.sh
    echo "Running package repository fix..."
    timeout 300 ./pkg-fix.sh || {
      echo "Package fix failed or timed out, but continuing..."
    }
    
    # Make build script executable
    chmod +x build-static-jre.sh
    
    # Run the build script with timeout
    echo "Starting main build process..."
    timeout 7200 ./build-static-jre.sh || {
      echo "Build script failed or timed out"
      echo "Checking what files were created:"
      ls -la
      exit 1
    }
  
  # Verify script
  verify_script: |
    # Test the built JRE
    if [ -f "openjdk-${OPENJDK_VERSION}-jre-freebsd-$(uname -m)-static.tar.gz" ]; then
      echo "Build artifact created successfully"
      ls -lh *.tar.gz
      
      # Extract and test
      mkdir -p test-jre
      tar -xzf openjdk-${OPENJDK_VERSION}-jre-freebsd-$(uname -m)-static.tar.gz -C test-jre
      
      # Test java execution
      test-jre/bin/java -version
      
      # Show dependencies
      echo "Dependencies check:"
      ldd test-jre/bin/java || echo "Static binary - no dynamic dependencies"
      
      # Show size
      echo "Archive size: $(du -h *.tar.gz | cut -f1)"
    else
      echo "Build failed - no artifact found"
      exit 1
    fi
  
  # Upload artifacts
  artifacts:
    path: "*.tar.gz"
    type: application/gzip
  
  # Optional: Upload logs on failure
  on_failure:
    logs_artifacts:
      path: "/tmp/openjdk-build/**/*.log"

# Optional: Matrix build for multiple versions
matrix_build_task:
  name: "Build JRE Matrix"
  
  freebsd_instance:
    image_family: freebsd-13-4
    cpu: 6
    memory: 12G
  
  timeout_in: 150m
  
  environment:
    matrix:
      - OPENJDK_VERSION: "11"
      - OPENJDK_VERSION: "13"  # Added OpenJDK 13
      - OPENJDK_VERSION: "17"
      - OPENJDK_VERSION: "21"
  
  # Only run matrix build on tags or main branch
  only_if: $CIRRUS_TAG != '' || $CIRRUS_BRANCH == 'main'
  
  build_script: |
    chmod +x build-static-jre.sh
    ./build-static-jre.sh
  
  verify_script: |
    tar -tf openjdk-${OPENJDK_VERSION}-jre-freebsd-$(uname -m)-static.tar.gz | head -20
    
  artifacts:
    path: "*.tar.gz"

# Optional: Docker build task (if you want to also build Linux version for comparison)
linux_comparison_task:
  name: "Linux JRE Build (Comparison)"
  
  container:
    image: ubuntu:22.04
    cpu: 4
    memory: 8G
  
  depends_on: freebsd_jre_build
  
  install_script: |
    apt-get update
    apt-get install -y openjdk-17-jdk build-essential
  
  build_script: |
    echo "This would build Linux version for comparison"
    java -version
